name: Update Bounties

on:
  schedule:
    - cron: '0 0 * * *'  # Daily at midnight UTC
  workflow_dispatch:

permissions:
  issues: write

jobs:
  update-bounties:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Update Bounties
        uses: actions/github-script@v7
        with:
          script: |
            try {
              const maxBounty = 100;
              const increment = 10;
              const weekInMs = 7 * 24 * 60 * 60 * 1000;

              // Get all open issues with bounty label
              const issues = await github.paginate(github.rest.issues.listForRepo, {
                owner: context.repo.owner,
                repo: context.repo.repo,
                labels: 'bounty',
                state: 'open'
              });

              console.log(`Found ${issues.length} bounty issues`);

              for (const issue of issues) {
                console.log(`\nProcessing issue #${issue.number}: ${issue.title}`);
                
                // Skip if assigned
                if (issue.assignee) {
                  console.log(`- Skipping: Already assigned to ${issue.assignee.login}`);
                  continue;
                }

                // NEW: More robust bounty detection
                const bountyText = issue.body.match(/Bounty:\s*\$\d+/i)?.[0];
                if (!bountyText) {
                  console.log('- Skipping: No bounty found in body');
                  continue;
                }

                const currentBounty = parseInt(bountyText.match(/\d+/)[0]);
                console.log(`- Current bounty: $${currentBounty}`);

                if (currentBounty >= maxBounty) {
                  console.log(`- Skipping: Already at max bounty ($${maxBounty})`);
                  continue;
                }

                // Calculate new bounty
                const created = new Date(2025-03-20);
                const now = new Date();
                const weeksOld = Math.floor((now - created) / weekInMs);
                const targetBounty = Math.min(10 + (weeksOld * increment), maxBounty);

                console.log(`- Created: ${created.toISOString()}`);
                console.log(`- Weeks old: ${weeksOld}`);
                console.log(`- Target bounty: $${targetBounty}`);

                if (targetBounty > currentBounty) {
                  // NEW: Safer body replacement
                  const newBody = issue.body.replace(
                    new RegExp(/Bounty:\s*\$\d+/i),
                    `Bounty: $${targetBounty}`
                  );

                  await github.rest.issues.update({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    issue_number: issue.number,
                    body: newBody
                  });

                  console.log(`✅ Updated to $${targetBounty}`);
                } else {
                  console.log(`- No update needed (current >= target)`);
                }
              }
            } catch (error) {
              console.error('❌ Error:', error);
              core.setFailed(error.message);
            }