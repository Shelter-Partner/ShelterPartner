import 'package:flutter/material.dart';
import 'package:http/http.dart' as http;
import 'dart:convert';

import 'package:url_launcher/url_launcher.dart';

class BetterImpactPage extends StatefulWidget {
  const BetterImpactPage({super.key});

  @override
  _BetterImpactPageState createState() => _BetterImpactPageState();
}

class _BetterImpactPageState extends State<BetterImpactPage> {
  final TextEditingController _usernameController = TextEditingController();
  final TextEditingController _passwordController = TextEditingController();

  Future<void> _sync() async {
    final String username = _usernameController.text;
    final String password = _passwordController.text;

    final String basicAuth =
        'Basic ' + base64Encode(utf8.encode('$username:$password'));

    final response = await http.get(
      Uri.parse('https://api.betterimpact.com/v1/organization/users/'),
      headers: <String, String>{'authorization': basicAuth},
    );

    if (response.statusCode == 200) {
      final List<dynamic> users = json.decode(response.body)['users'];
      final List<dynamic> usersWithEmail = users.where((user) => user['email_address'] != null && user['email_address'].isNotEmpty).toList();
      
      showDialog(
        context: context,
        builder: (BuildContext context) {
          return AlertDialog(
            title: const Text('Users'),
            content: SingleChildScrollView(
              child: ListBody(
                children: usersWithEmail.map((user) {
                  return Text(
                      '${user['first_name']} ${user['last_name']}: ${user['email_address']}');
                }).toList(),
              ),
            ),
            actions: <Widget>[
              TextButton(
                child: const Text('OK'),
                onPressed: () {
                  Navigator.of(context).pop();
                },
              ),
            ],
          );
        },
      );
    } else {
      showDialog(
        context: context,
        builder: (BuildContext context) {
          return AlertDialog(
            title: const Text('Error'),
            content: const Text('Failed to sync users.'),
            actions: <Widget>[
              TextButton(
                child: const Text('OK'),
                onPressed: () {
                  Navigator.of(context).pop();
                },
              ),
            ],
          );
        },
      );
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('Better Impact Sync'),
      ),
      body: Padding(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          mainAxisAlignment: MainAxisAlignment.start,
          children: <Widget>[
            const Text(
              "Important: Please Read",
              style: TextStyle(
                fontSize: 18,
                fontWeight: FontWeight.bold,
                color: Colors.red,
              ),
            ),
            const SizedBox(height: 20),
            const Text("This will automatically add new users who are volunteers in Better Impact and whose status is \"Accepted\" and remove users who are no longer in Better Impact or whose status is no longer \"Accepted\"."),
            const SizedBox(height: 20),
            const Text("Because of privacy laws, volunteers will not stay up to date automatically. You will have to come back here whenever you want to resync the volunteers. The username and password are NOT your normal login. They are generated by following the link below. Make sure to only select the \"Volunteer\" checkbox when creating the key. The username and password will not be saved anywhere and will only be used to sync your volunteers."),
            const SizedBox(height: 20),
            InkWell(
              onTap: () async {
                const url = 'https://support.betterimpact.com/volunteerimpacthelp/en/help-articles/it/';
                if (await canLaunch(url)) {
                  await launch(url);
                } else {
                  throw 'Could not launch $url';
                }
              },
              child: const Text(
                'How To Generate Username and Password (API Key)',
                style: TextStyle(
                  color: Colors.blue,
                  decoration: TextDecoration.underline,
                ),
              ),
            ),
            const SizedBox(height: 20),
            TextField(
              controller: _usernameController,
              decoration: const InputDecoration(labelText: 'Username'),
            ),
            TextField(
              controller: _passwordController,
              decoration: const InputDecoration(labelText: 'Password'),
              obscureText: true,
            ),
            const SizedBox(height: 20),
            ElevatedButton(
              onPressed: _sync,
              child: const Text('Sync'),
            ),
          ],
        ),
      ),
    );
  }
}