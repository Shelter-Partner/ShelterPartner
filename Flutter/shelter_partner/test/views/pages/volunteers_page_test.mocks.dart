// Mocks generated by Mockito 5.4.4 from annotations
// in shelter_partner/test/views/pages/volunteers_page_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:cloud_firestore/cloud_firestore.dart' as _i6;
import 'package:mockito/mockito.dart' as _i1;
import 'package:shelter_partner/models/shelter.dart' as _i3;
import 'package:shelter_partner/repositories/volunteers_repository.dart' as _i2;

import '../../helpers/test_volunteer_data.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeVolunteersRepository_0 extends _i1.SmartFake
    implements _i2.VolunteersRepository {
  _FakeVolunteersRepository_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeShelter_1 extends _i1.SmartFake implements _i3.Shelter {
  _FakeShelter_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [VolunteersRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockVolunteersRepository extends _i1.Mock
    implements _i2.VolunteersRepository {
  MockVolunteersRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Stream<_i3.Shelter> fetchShelterWithVolunteers(String? shelterID) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchShelterWithVolunteers,
          [shelterID],
        ),
        returnValue: _i5.Stream<_i3.Shelter>.empty(),
      ) as _i5.Stream<_i3.Shelter>);

  @override
  _i5.Future<void> toggleVolunteerSetting(
    String? shelterID,
    String? field,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #toggleVolunteerSetting,
          [
            shelterID,
            field,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> modifyVolunteerSettingString(
    String? shelterID,
    String? field,
    String? newValue,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #modifyVolunteerSettingString,
          [
            shelterID,
            field,
            newValue,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> changeGeofence(
    String? shelterID,
    _i6.GeoPoint? locaiton,
    double? radius,
    double? zoom,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #changeGeofence,
          [
            shelterID,
            locaiton,
            radius,
            zoom,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> sendVolunteerInvite(
    String? firstName,
    String? lastName,
    String? email,
    String? shelterID,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #sendVolunteerInvite,
          [
            firstName,
            lastName,
            email,
            shelterID,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<String?> getIdToken() => (super.noSuchMethod(
        Invocation.method(
          #getIdToken,
          [],
        ),
        returnValue: _i5.Future<String?>.value(),
      ) as _i5.Future<String?>);

  @override
  _i5.Future<void> deleteVolunteer(
    String? id,
    String? shelterId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteVolunteer,
          [
            id,
            shelterId,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> incrementVolunteerSetting(
    String? shelterID,
    String? field,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #incrementVolunteerSetting,
          [
            shelterID,
            field,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> decrementVolunteerSetting(
    String? shelterID,
    String? field,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #decrementVolunteerSetting,
          [
            shelterID,
            field,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
}